# Nucleotid.es input files

The data used by [nucleotid.es][] is organised and imported from structured
YAML files. The aim these files is to tackle the problem of managing the large
numbers of files and Docker images using in nucleotid.es. These input files are
designed be human-editable so that they may be updated with new entries as more
benchmarking files or Docker images are added. This document describes the
schema of the input files.

[nucleotid.es]: http://nucleotid.es

## Input metadata

Nucleotid.es uses biological data stored in files, such as FASTQ, to test the
performance of bioinformatics Docker images. Metadata is required to record and
organise by the origin the data. Examples of the kinds of metadata used in
nucleotid.es are the sequencing platform or how the source DNA was prepared for
sequencing. Each metadata file is stored in the `type` subfolder and follows
the same format:

``` yaml
---
- name: Unique identifier within this file, uses only the characters a-z, 0-9 and '_'.
  description: A full text description of this metadata value.

# An example entry
- name: hiseq_2500
  description: The Illumina high-throughput short-read sequencer.
```

The following files each describe a type of metadata, stored in the directory
'type'.

  * platform.yml: The hardware platform on which the data was produced.
  * product.yml: The type of sequencing product, e.g. shotgun sequencing, MDA
    or amplicon.
  * protocol.yml: How the DNA was prepared, e.g. nextera or blue pippin.
  * run_mode.yml: How the sequence library was prepared, e.g. 2x150 or 2x250.
  * source.yml: The source of the DNA, e.g. microbial_genome, metagenome or
    fungal_genome.

## Nucleotid.es metadata

The nucleotid.es database also uses metadata to track the types of files and
metrics generated during benchmarking. These use the same format as the input
metadata above and are recorded in the files:

  * metric.yml: Describes the different metrics produced from benchmarking,
    e.g. ng50 or max_mem_gb (maximum memory usage in gigabytes).
  * file.yml: Describes the different types of files stored and used in
    benchmarking.

## Input Data Source

The nucleotid.es benchmarks are based on passing input data to a bioinformatics
Docker image and then comparing the produced result with a reference file. Each
input file originates from a source such as a microbe, environment or synthetic
data. The file `input_data/source.yml` describes the sources of the data along
with associated reference files for each.

``` yaml
---
- name: ecoli_k12
  description: A laboratory strain with a well-described genome
  source_type: microbial_genome
  references:
  - file_type: reference_fasta
    md5sum: eaa5305f8d0debbce934975c3ec6c14b
    url: s3://nucleotid-es/reference/0001/genome.fa
- name: kansas_farm_soil
  description: A soil sample from a kansas farm
  source_type: metagenome
  # This metagenome has no reference data
  references: []
```

The fields in this file are as follows:
  * name: The unique identifier within the file for this data source, uses only
    the characters a-z, 0-9 and '_'.
  * description: A full text description of this what the data source is.
  * source_type: The identifier for the metadata value from the
    `type/source.yml` file. This categorises the source of the input data.
  * references: Zero or more reference files for this data.

## Input Data File

The file `input_data/file.yml` contains the files used for benchmarking. Each
entry is a set of files from the same batch, e.g. by read subsampling a single
fastq file or by pooling in the same sequencing run. The entries include
metadata to describe the origin and cross reference the `input_data/source.yml`
entry from which they were generated.

``` yaml
---
- id: jgi_isolate_microbe_2x150_1
  platform: 'illumina'
  product: 'shotgun sequencing'
  protocol: 'nextera'
  run_mode: '2x150'
  input_data_source: 'ecoli_k12'
  description: >
    A plain text description of where these reads came from and how they were
    produced.
  replicates:
    - md5sum: 87673a0358e2f248a4c44eccda8c46b4
      file_type: gdna_short_reads
      url: s3://nucleotid-es/0001/0001/2000000/1/reads.fq.gz
    - md5sum: c1f0fb4cad045641c1bd001c2f4dbe37
      url: s3://nucleotid-es/0001/0001/2000000/2/reads.fq.gz
      file_type: gdna_short_reads
```

The fields in this file are as follows:
  * name: Unique identifier within this file, uses only the characters a-z, 0-9 and '_'.
  * description: A plain text description of the data.
  * platform / product / protocol / run_mode: The corresponding metadata for
    this data set. Corresponds to entries for the files found in the `types`
    folder.
  * input_data_source: The name of the originating source entry from the
    `input_data/source.yml` file.
  * replicates: The list of input data files for this data set. The name
    `replicates` is chosen to indicate this is how nucleotid.es views these
    input data files.

## Benchmarks

The `benchmark.yml` file describes the benchmarks performed within
nucleotid.es. Each entry corresponds to a type of benchmark and lists the types
of docker images used in producing results and then evaluating them.

```yaml
---
- name: short_read_isolate_assembly_with_reference
  description: >
    Text description of this benchmark
  product_image_type: short_read_assembler
  evaluation_image_type: reference_assembly_evaluator
  data_sets:
    - jgi_isolate_2x150
```

The fields in this file are:
  * name: Unique identifier within this file, uses only the characters a-z, 0-9 and '_'.
  * description: A plain text description of the benchmark.
  * product_image_type: The type of docker image to be benchmarked.
  * evaluation_image_type: The type of docker image to be used to evaluate the
    produced results.
  * data_sets: The list of IDs for the data sets to be used in the benchmarking.
